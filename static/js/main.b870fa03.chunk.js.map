{"version":3,"sources":["images/logo.jpg","components/Header.js","components/SearchForm.js","components/Results.js","components/Footer.js","components/ResultsValue.js","components/Pagination.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","SearchForm","props","onSubmit","submit","type","value","onChange","change","placeholder","Results","content","artist","Fragment","href","url","img","title","Footer","ResultsValue","info","search","Pagination","onClick","clickPrev","clickNext","App","state","searchResult","nextClick","next","startResult","endResult","handleInputChange","e","_this","setState","target","handleSongSearch","preventDefault","APIURL","concat","fetch","then","response","ok","Error","json","data","results","forEach","result","id","trackId","artistName","song","trackName","image","artworkUrl100","trackViewUrl","push","catch","error","console","log","handleClickNext","length","prevState","handleClickPrev","page","this","map","components_Results","key","slice","components_Header","components_SearchForm","components_ResultsValue","components_Pagination","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b870fa03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ebaacbbe.jpg\";","import React from \"react\";\nimport \"../styles/Header.css\";\nimport logo from \"../images/logo.jpg\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <img className=\"header__img\" src={logo} alt=\"PGS-software\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../styles/SearchForm.css\";\n\nconst SearchForm = props => {\n  return (\n    <form className=\"search-form\" onSubmit={props.submit}>\n      <p className=\"search-form__header\">iTunes api example</p>\n      <p className=\"search-form__form\">\n        <input\n          className=\"search-form__input\"\n          type=\"text\"\n          value={props.value}\n          onChange={props.change}\n          placeholder=\"Search songs..\"\n        />\n        <button className=\"search-form__button\">Search</button>\n      </p>\n      <p className=\"search-form__instruction\">\n        Search by song title,author, song number,lyrics, catalog or copyright\n        owner\n      </p>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"../styles/Results.css\";\n\nconst Results = props => {\n  let content = null;\n  if (props.artist) {\n    content = (\n      <React.Fragment>\n        <a className=\"result__a\" href={props.url}>\n          <img className=\"result__img\" src={props.img} alt=\"Album artwork\" />\n          <h2 className=\"result__description\">\n            <p className=\"result__title\">{props.title}</p>\n            <p className=\"result__artist\">By {props.artist}</p>\n          </h2>\n        </a>\n      </React.Fragment>\n    );\n  }\n\n  return <li className=\"result\">{content}</li>;\n};\n\nexport default Results;\n","import React from \"react\";\nimport \"../styles/Footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer__line\" />\n      <p className=\"footer__paragraph\">Powered by PGS</p>\n      <span className=\"footer__line\" />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"../styles/ResultsValue.css\";\n\nconst ResultsValue = props => {\n  let info = null;\n  if (props.value === 0 && props.search) {\n    info = <p className=\"results-value\">Sorry, no matches found</p>;\n  } else if (props.value > 0 && props.search) {\n    info = <p className=\"results-value\">Found {props.value} songs</p>;\n  }\n  return <div>{info}</div>;\n};\nexport default ResultsValue;\n","import React from \"react\";\nimport \"../styles/Pagination.css\";\n\nconst Pagination = props => {\n  return (\n    <div className=\"pagination\">\n      <button className=\"pagination__prev\" onClick={props.clickPrev}>\n        prev\n      </button>\n      <button className=\"pagination__next\" onClick={props.clickNext}>\n        next\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport SearchForm from \"./SearchForm.js\";\nimport Results from \"./Results.js\";\nimport Footer from \"./Footer.js\";\nimport ResultsValue from \"./ResultsValue.js\";\nimport Pagination from \"./Pagination.js\";\nimport \"../styles/App.css\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    searchResult: [],\n    search: false,\n    nextClick: false,\n    next: [],\n    startResult: 9,\n    endResult: 18\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  handleSongSearch = e => {\n    e.preventDefault();\n    const APIURL = `https://itunes.apple.com/search?term=${\n      this.state.value\n    }&entity=song&limit=100`;\n\n    fetch(APIURL)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Cannot connect with server\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        let response = [];\n        data.results.forEach(result => {\n          const search = {\n            id: result.trackId,\n            artist: result.artistName,\n            song: result.trackName,\n            image: result.artworkUrl100,\n            url: result.trackViewUrl\n          };\n          response.push(search);\n        });\n        this.setState({ searchResult: response, search: true });\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleClickNext = () => {\n    if (this.state.endResult < this.state.searchResult.length) {\n      this.setState({ nextClick: true });\n      this.setState(prevState => ({\n        startResult: prevState.startResult + 9\n      }));\n      this.setState(prevState => ({\n        endResult: prevState.endResult + 9\n      }));\n    }\n  };\n\n  handleClickPrev = () => {\n    if (this.state.endResult > 9) {\n      this.setState({ nextClick: true });\n      this.setState(prevState => ({\n        startResult: prevState.startResult - 9\n      }));\n      this.setState(prevState => ({\n        endResult: prevState.endResult - 9\n      }));\n    }\n  };\n\n  render() {\n    const songs = this.state.searchResult.map(song => (\n      <Results\n        key={song.id}\n        title={song.song}\n        artist={song.artist}\n        img={song.image}\n        url={song.url}\n      />\n    ));\n\n    const page = songs.slice(0, 9);\n\n    const nextpage = this.state.searchResult.map(song => (\n      <Results\n        key={song.id}\n        title={song.song}\n        artist={song.artist}\n        img={song.image}\n        url={song.url}\n      />\n    ));\n    const next = nextpage.slice(this.state.startResult, this.state.endResult);\n\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        <SearchForm\n          value={this.state.value}\n          change={this.handleInputChange}\n          submit={this.handleSongSearch}\n        />\n        <ResultsValue\n          value={this.state.searchResult.length}\n          search={this.state.search}\n        />\n        <ul className=\"main results-container\">\n          {this.state.nextClick ? next : page}\n        </ul>\n        {this.state.searchResult.length > 9 ? (\n          <Pagination\n            clickNext={this.handleClickNext}\n            clickPrev={this.handleClickPrev}\n          />\n        ) : null}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}